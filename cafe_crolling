# cafe-crolling
카페 웹 크로링
from selenium import webdriver
from selenium.webdriver.support.ui import Select
import time
from bs4 import BeautifulSoup
import pandas as pd


#스펙업 best게시판 게시글 제목,내용 크롤링


driver_path = '../resources/chromedriver'

driver = webdriver.Chrome(executable_path=driver_path)
driver.get('https://nid.naver.com/nidlogin.login')
driver.find_element_by_name('id').send_keys('아이디')
driver.find_element_by_name('pw').send_keys('비밀번호')
driver.find_element_by_css_selector('#frmNIDLogin > fieldset > input').click()
time.sleep(20)

driver.implicitly_wait(3)
driver.get("https://cafe.naver.com/specup?iframe_url=/ArticleList.nhn%3Fsearch.clubid=15754634%26search.menuid=3525%26search.boardtype=L")
driver.implicitly_wait(3)
driver.switch_to.frame("cafe_main")

time.sleep(0.5)
driver.find_element_by_css_selector('div.sort_area div.check_box').click()

addrUrl = []
page = 1
while page < 16:    #1~15p의 모든 게시글의 제목,내용 불러와 csv형식으로 저장

    try:
        time.sleep(1)
        driver.get(f"https://cafe.naver.com/ArticleList.nhn?search.clubid=15754634&search.menuid=3525&search.boardtype=L&search.totalCount=151&search.cafeId=15754634&search.page={page}")
        driver.switch_to.frame("cafe_main")
        page += 1
        try:
            if driver.find_element_by_class_name("nodata").text == '등록된 게시글이 없습니다.':
                # 무한으로 다음페이지로 넘어가는데 만약에 등록된게시글이 없습니다가 나오면 다음페이지로 넘어가는것을 멈춤
                break
        except:
            pass
        for i in range(1, 16, 1):
            addrUrl.append(driver.find_element_by_xpath(f'//*[@id="main-area"]/div[4]/table/tbody/tr[{i}]/td[1]/div[2]/div/a[1]').get_attribute("href"))
        driver.switch_to.default_content()
    except:
        pass

title = []
contents = []
for url in addrUrl:
    time.sleep(3)
    driver.get(url)
    driver.switch_to.frame("cafe_main")

    title.append(driver.find_element_by_css_selector('div.article_header div.ArticleTitle div h3').text)
    contents.append(driver.find_element_by_css_selector('div.ArticleContentBox div.article_container div.article_viewer div div').text)

df = pd.DataFrame({"제목": title, "내용": contents})
df.to_csv('../output/specup_test.csv', encoding="utf-8-sig")


driver.quit()
